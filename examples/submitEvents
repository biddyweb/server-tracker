#!/usr/bin/env node

var hostname = require('os').hostname();
var http = require('http');

function postEvent(options) {
  var payload = {
    "events": [{
      "type": "shopping",
      "timestamp": Date.now(),
      "duration": 1200,
      "source": hostname,
      "visitor": "a815ee70-df67-11e0-9572-0800200c9a66",
      "session": "aaebf7d5-c80f-4c04-a2b2-e0de618a364d",
      "metrics": {
        "remotePerformance": [{
          "timestamp": 1316068487831,
          "duration": 200,
          "url": {
            "protocol": "http",
            "host": "iphone.jolira.com",
            "port": "8081",
            "path": "/query/item",
            "params": {
              "product": 73212272,
              "mode": "summary"
            }
          }
        }, {
          "timestamp": 1316068488039,
          "duration": 129,
          "url": {
            "protocol": "http",
            "host": "iphone.jolira.com",
            "port": "8081",
            "path": "/query/item",
            "params": {
              "product": 34294213,
              "mode": "details"
            }
          }
        }],
        "barcode-scan": {
          "action": "multiple",
          "barcode": "003452135"
        },
        "view-favorites": {}
      }
    }, {
      "type": "shopping",
      "timestamp": Date.now(),
      "duration": 2432,
      "source": hostname,
      "visitor": "a815ee70-df67-11e0-9572-0800200c9a66",
      "session": "aaebf7d5-c80f-4c04-a2b2-e0de618a364d",
      "metrics": {
        "exception": {
          "message": "socket error",
          "type": "NXSocketException",
          "stacktrace": [{
            "File": "Connector.m",
            "Line": 134
          }, {
            "File": "Requestor.m",
            "Line": 332
          }]
        },
        "view-voucher": {}
      }
    }],
    "logs": [{
      "source": hostname,
      "timestamp": Date.now(),
      "message": "socket error",
      "level": "ERROR"
    }]
  };
  var req = http.request(options, function(res) {
    console.log('STATUS: ' + res.statusCode);
    console.log('HEADERS: ' + JSON.stringify(res.headers));
    res.setEncoding('utf8');
    res.on('data', function(chunk) {
      console.log('BODY: ' + chunk);
    });
  });
  req.on('error', function(e) {
    console.log('problem with request: ' + e.message);
  });
  // write data to request body
  req.write(JSON.stringify(payload));
  req.end();
}

var options = {
  host: 'localhost',
  port: 3080,
  path: '/submit/events',
  method: 'POST',
  headers: {
    "Accept": "application/json",
    "Content-Type": "application/json"
  }
};

var count = process.argv.length > 2 ? parseInt(process.argv[2]) : 1;

for(var idx=0; idx<count; idx++) {
  postEvent(options);
}