#!/usr/bin/env node

var fs = require('fs');
var util = require('util');
var configuration = require("../lib/config");
process.title = "config-tracker";

process.on('uncaughtException', function(err) {
  console.log(err.stack);
});

function read(file, callback) {
  fs.readFile(process.argv[2], "utf-8", function(err, data) {
    if (err) {
      throw err;
    }
    var options = JSON.parse(data);
    callback(options);
  });
}

function updateConfig(options, newConfigFile) {
  var mongo = options.mongo ? options.mongo : {};
  configuration.load(options, function(props) {
    if (newConfigFile) {
      read(newConfigFile, function(props) {
        configuration.save(props, function(doc) {
          console.log("%j", props);
          process.exit(0);
        });
      });
    }
    else {
      console.log("%j", props);
      process.exit(0);
    }
  });
}
if (process.argv.length < 3) {
  configuration.bootstrap(function(options) {
    updateConfig(options);
  });
}
else if (process.argv.length < 4) {
  configuration.bootstrap(function(options) {
    updateConfig(options, process.argv[2]);
  });
}
else {
  read(process.argv[2], function(properties) {
    updateConfiguration(properties, process.argv[3]);
  });
}